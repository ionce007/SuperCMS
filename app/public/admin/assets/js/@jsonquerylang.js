const A=n=>Array.isArray(n),U=n=>n&&typeof n=="object"&&!A(n),K=n=>typeof n=="string";function f(n){return(...t)=>{const e=t.map(s=>y(s)),r=e[0],o=e[1];return e.length===1?s=>n(r(s)):e.length===2?s=>n(r(s),o(s)):s=>n(...e.map($=>$(s)))}}const J={pipe:(...n)=>{const t=n.map(e=>y(e));return e=>t.reduce((r,o)=>o(r),e)},object:n=>{const t=Object.keys(n).map(e=>[e,y(n[e])]);return e=>{const r={};for(const[o,s]of t)r[o]=s(e);return r}},array:(...n)=>{const t=n.map(e=>y(e));return e=>t.map(r=>r(e))},get:(...n)=>{if(n.length===0)return t=>t!=null?t:null;if(n.length===1){const t=n[0];return e=>{var r;return(r=e==null?void 0:e[t])!=null?r:null}}return t=>{let e=t;for(const r of n)e=e==null?void 0:e[r];return e!=null?e:null}},map:n=>{const t=y(n);return e=>e.map(t)},mapObject:n=>{const t=y(n);return e=>{const r={};for(const o of Object.keys(e)){const s=t({key:o,value:e[o]});r[s.key]=s.value}return r}},mapKeys:n=>{const t=y(n);return e=>{const r={};for(const o of Object.keys(e)){const s=t(o);r[s]=e[o]}return r}},mapValues:n=>{const t=y(n);return e=>{const r={};for(const o of Object.keys(e))r[o]=t(e[o]);return r}},filter:n=>{const t=y(n);return e=>e.filter(r=>z(t(r)))},sort:(n=["get"],t)=>{const e=y(n),r=t==="desc"?-1:1;function o(s,$){const v=e(s),k=e($);return v>k?r:v<k?-r:0}return s=>s.slice().sort(o)},reverse:()=>n=>n.toReversed(),pick:(...n)=>{const t=n.map(([r,...o])=>[o[o.length-1],J.get(...o)]),e=(r,o)=>{const s={};for(const[$,v]of o)s[$]=v(r);return s};return r=>A(r)?r.map(o=>e(o,t)):e(r,t)},groupBy:n=>{const t=y(n);return e=>{const r={};for(const o of e){const s=t(o);r[s]?r[s].push(o):r[s]=[o]}return r}},keyBy:n=>{const t=y(n);return e=>{const r={};for(const o of e){const s=t(o);s in r||(r[s]=o)}return r}},flatten:()=>n=>n.flat(),join:(n="")=>t=>t.join(n),split:f((n,t)=>t!==void 0?n.split(t):n.trim().split(/\s+/)),substring:f((n,t,e)=>n.slice(Math.max(t,0),e)),uniq:()=>n=>[...new Set(n)],uniqBy:n=>t=>Object.values(J.keyBy(n)(t)),limit:n=>t=>t.slice(0,Math.max(n,0)),size:()=>n=>n.length,keys:()=>Object.keys,values:()=>Object.values,prod:()=>n=>n.reduce((t,e)=>t*e),sum:()=>n=>n.reduce((t,e)=>t+e),average:()=>n=>J.sum()(n)/n.length,min:()=>n=>Math.min(...n),max:()=>n=>Math.max(...n),and:f((n,t)=>!!(n&&t)),or:f((n,t)=>!!(n||t)),not:f(n=>!n),exists:n=>{const t=n.slice(1),e=t.pop(),r=J.get(...t);return o=>{const s=r(o);return!!s&&Object.hasOwnProperty.call(s,e)}},if:(n,t,e)=>{const r=y(n),o=y(t),s=y(e);return $=>z(r($))?o($):s($)},in:(n,t)=>{const e=y(n),r=y(t);return o=>r(o).includes(e(o))},"not in":(n,t)=>{const e=J.in(n,t);return r=>!e(r)},regex:(n,t,e)=>{const r=new RegExp(t,e),o=y(n);return s=>r.test(o(s))},eq:f((n,t)=>n===t),gt:f((n,t)=>n>t),gte:f((n,t)=>n>=t),lt:f((n,t)=>n<t),lte:f((n,t)=>n<=t),ne:f((n,t)=>n!==t),add:f((n,t)=>n+t),subtract:f((n,t)=>n-t),multiply:f((n,t)=>n*t),divide:f((n,t)=>n/t),pow:f((n,t)=>n**t),mod:f((n,t)=>n%t),abs:f(Math.abs),round:f((n,t=0)=>+"".concat(Math.round(+"".concat(n,"e").concat(t)),"e").concat(-t)),number:f(n=>{const t=Number(n);return Number.isNaN(Number(n))?null:t}),string:f(String)},z=n=>n!==null&&n!==0&&n!==!1,q=[];function y(n,t){q.unshift({...J,...q[0]});try{const e=A(n)?P(n,q[0]):U(n)?_('Function notation ["object", {...}] expected but got '.concat(JSON.stringify(n))):()=>n;return r=>{var o;try{return e(r)}catch(s){throw s.jsonquery=[{data:r,query:n},...(o=s.jsonquery)!=null?o:[]],s}}}finally{q.shift()}}function P(n,t){const[e,...r]=n,o=t[e];return o||_("Unknown function '".concat(e,"'")),o(...r)}function _(n){throw new Error(n)}const B={and:"and",or:"or",eq:"==",gt:">",gte:">=",lt:"<",lte:"<=",ne:"!=",add:"+",subtract:"-",multiply:"*",divide:"/",pow:"^",mod:"%",in:"in","not in":"not in"},R=/^[a-zA-Z_$][a-zA-Z\d_$]*$/,V=/^[a-zA-Z_$][a-zA-Z\d_$]*/,C=/^"(?:[^"\\]|\\.)*"/,F=/^-?(?:0|[1-9]\d*)(?:\.\d+)?(?:[eE][+-]?\d+)?/,D=/^(0|[1-9][0-9]*)/,G=/^(true|false|null)/,H=/^[ \n\t\r]+/;function I(n,t){const e={...B},r=Object.keys(e).sort((u,l)=>l.length-u.length),o=()=>{i();const u=s();if(i(),n[c]==="|"){const l=[u];for(;n[c]==="|";)c++,i(),l.push(s());return["pipe",...l]}return u},s=()=>{const u=$();i();for(const l of r){const d=e[l];if(n.substring(c,c+d.length)===d){c+=d.length,i();const O=$();return[l,u,O]}}return u},$=()=>{if(n[c]==="("){c++;const u=o();return b(")"),u}return v()},v=()=>{var u,l,d;if(n[c]==="."){const O=[];for(;n[c]===".";)c++,O.push((d=(l=(u=m())!=null?u:g())!=null?l:x())!=null?d:w("Property expected"));return["get",...O]}return k()},k=()=>{const u=c,l=g();if(i(),!l||n[c]!=="(")return c=u,p();c++,!J[l]&&w("Unknown function '".concat(l,"'")),i();const d=n[c]!==")"?[o()]:[];for(;c<n.length&&n[c]!==")";)i(),b(","),d.push(o());return b(")"),[l,...d]},p=()=>{var u,l,d;if(n[c]==="{"){c++,i();const O={};let M=!0;for(;c<n.length&&n[c]!=="}";){M?M=!1:(b(","),i());const Z=(d=(l=(u=m())!=null?u:g())!=null?l:x())!=null?d:w("Key expected");i(),b(":"),O[Z]=o()}return b("}"),["object",O]}return a()},a=()=>{var u,l;if(n[c]==="["){c++,i();const d=[];let O=!0;for(;c<n.length&&n[c]!=="]";)O?O=!1:(b(","),i()),d.push(o());return b("]"),["array",...d]}return(l=(u=m())!=null?u:h())!=null?l:N()},m=()=>j(C,JSON.parse),g=()=>j(V,u=>u),h=()=>j(F,JSON.parse),x=()=>j(D,JSON.parse),N=()=>{const u=j(G,JSON.parse);if(u!==void 0)return u;w("Value expected")},S=()=>{i(),c<n.length&&w("Unexpected part '".concat(n.substring(c),"'"))},j=(u,l)=>{const d=n.substring(c).match(u);if(d)return c+=d[0].length,l(d[0])},i=()=>j(H,u=>u),b=u=>{n[c]!==u&&w("Character '".concat(u,"' expected")),c++},w=(u,l=c)=>{throw new SyntaxError("".concat(u," (pos: ").concat(l,")"))};let c=0;const E=o();return S(),E}const L=40,T="  ",W=(n,t)=>{const e=T,r=(p,a)=>A(p)?o(p,a):JSON.stringify(p),o=(p,a)=>{var j;var m;const[g,...h]=p;if(g==="get"&&h.length>0)return $(h);if(g==="pipe"){const i=h.map(b=>r(b,a+e));return k(i,[""," | ",""],["","\n".concat(a+e,"| "),""])}if(g==="object")return s(h[0],a);if(g==="array"){const i=h.map(b=>r(b,a));return k(i,["[",", ","]"],["[\n".concat(a+e),",\n".concat(a+e),"\n".concat(a,"]")])}const x=(j=(m=void 0)==null?void 0:m[g])!=null?j:B[g];if(x&&h.length===2){const[i,b]=h,w=r(i,a),c=r(b,a);return"(".concat(w," ").concat(x," ").concat(c,")")}const N=h.length===1?a:a+e,S=h.map(i=>r(i,N));return h.length===1&&S[0][0]==="("?"".concat(g).concat(S[0]):k(S,["".concat(g,"("),", ",")"],h.length===1?["".concat(g,"("),",\n".concat(a),")"]:["".concat(g,"(\n").concat(N),",\n".concat(N),"\n".concat(a,")")])},s=(p,a)=>{const m=a+e,g=Object.entries(p).map(([h,x])=>"".concat(v(h),": ").concat(r(x,m)));return k(g,["{ ",", "," }"],["{\n".concat(m),",\n".concat(m),"\n".concat(a,"}")])},$=p=>p.map(a=>".".concat(v(a))).join(""),v=p=>R.test(p)?p:JSON.stringify(p),k=(p,[a,m,g],[h,x,N])=>a.length+p.reduce((S,j)=>S+j.length+m.length,0)-m.length+g.length<=L?a+p.join(m)+g:h+p.join(x)+N;return r(n,"")};function Q(n,t,e){return y(K(t)?I(t):t)(n)}export{I as D,W as G,Q as H};
