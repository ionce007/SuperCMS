System.register([],(function(t,n){"use strict";return{execute:function(){t({D:$,H:function(t,n,e){return i(r(n)?$(n):n)(t)}});const n=t=>Array.isArray(t),e=t=>t&&"object"==typeof t&&!n(t),r=t=>"string"==typeof t;function o(t){return(...n)=>{const e=n.map((t=>i(t))),r=e[0],o=e[1];return 1===e.length?n=>t(r(n)):2===e.length?n=>t(r(n),o(n)):n=>t(...e.map((t=>t(n))))}}const s={pipe:(...t)=>{const n=t.map((t=>i(t)));return t=>n.reduce(((t,n)=>n(t)),t)},object:t=>{const n=Object.keys(t).map((n=>[n,i(t[n])]));return t=>{const e={};for(const[r,o]of n)e[r]=o(t);return e}},array:(...t)=>{const n=t.map((t=>i(t)));return t=>n.map((n=>n(t)))},get:(...t)=>{if(0===t.length)return t=>t??null;if(1===t.length){const n=t[0];return t=>(null==t?void 0:t[n])??null}return n=>{let e=n;for(const r of t)e=null==e?void 0:e[r];return e??null}},map:t=>{const n=i(t);return t=>t.map(n)},mapObject:t=>{const n=i(t);return t=>{const e={};for(const r of Object.keys(t)){const o=n({key:r,value:t[r]});e[o.key]=o.value}return e}},mapKeys:t=>{const n=i(t);return t=>{const e={};for(const r of Object.keys(t))e[n(r)]=t[r];return e}},mapValues:t=>{const n=i(t);return t=>{const e={};for(const r of Object.keys(t))e[r]=n(t[r]);return e}},filter:t=>{const n=i(t);return t=>t.filter((t=>u(n(t))))},sort:(t=["get"],n)=>{const e=i(t),r="desc"===n?-1:1;function o(t,n){const o=e(t),s=e(n);return o>s?r:o<s?-r:0}return t=>t.slice().sort(o)},reverse:()=>t=>t.toReversed(),pick:(...t)=>{const e=t.map((([t,...n])=>[n[n.length-1],s.get(...n)])),r=(t,n)=>{const e={};for(const[r,o]of n)e[r]=o(t);return e};return t=>n(t)?t.map((t=>r(t,e))):r(t,e)},groupBy:t=>{const n=i(t);return t=>{const e={};for(const r of t){const t=n(r);e[t]?e[t].push(r):e[t]=[r]}return e}},keyBy:t=>{const n=i(t);return t=>{const e={};for(const r of t){const t=n(r);t in e||(e[t]=r)}return e}},flatten:()=>t=>t.flat(),join:(t="")=>n=>n.join(t),split:o(((t,n)=>void 0!==n?t.split(n):t.trim().split(/\s+/))),substring:o(((t,n,e)=>t.slice(Math.max(n,0),e))),uniq:()=>t=>[...new Set(t)],uniqBy:t=>n=>Object.values(s.keyBy(t)(n)),limit:t=>n=>n.slice(0,Math.max(t,0)),size:()=>t=>t.length,keys:()=>Object.keys,values:()=>Object.values,prod:()=>t=>t.reduce(((t,n)=>t*n)),sum:()=>t=>t.reduce(((t,n)=>t+n)),average:()=>t=>s.sum()(t)/t.length,min:()=>t=>Math.min(...t),max:()=>t=>Math.max(...t),and:o(((t,n)=>!(!t||!n))),or:o(((t,n)=>!(!t&&!n))),not:o((t=>!t)),exists:t=>{const n=t.slice(1),e=n.pop(),r=s.get(...n);return t=>{const n=r(t);return!!n&&Object.hasOwnProperty.call(n,e)}},if:(t,n,e)=>{const r=i(t),o=i(n),s=i(e);return t=>u(r(t))?o(t):s(t)},in:(t,n)=>{const e=i(t),r=i(n);return t=>r(t).includes(e(t))},"not in":(t,n)=>{const e=s.in(t,n);return t=>!e(t)},regex:(t,n,e)=>{const r=new RegExp(n,e),o=i(t);return t=>r.test(o(t))},eq:o(((t,n)=>t===n)),gt:o(((t,n)=>t>n)),gte:o(((t,n)=>t>=n)),lt:o(((t,n)=>t<n)),lte:o(((t,n)=>t<=n)),ne:o(((t,n)=>t!==n)),add:o(((t,n)=>t+n)),subtract:o(((t,n)=>t-n)),multiply:o(((t,n)=>t*n)),divide:o(((t,n)=>t/n)),pow:o(((t,n)=>t**n)),mod:o(((t,n)=>t%n)),abs:o(Math.abs),round:o(((t,n=0)=>+`${Math.round(+`${t}e${n}`)}e${-n}`)),number:o((t=>{const n=Number(t);return Number.isNaN(Number(t))?null:n})),string:o(String)},u=t=>null!==t&&0!==t&&!1!==t,c=[];function i(t,r){c.unshift({...s,...c[0]});try{const r=n(t)?function(t,n){const[e,...r]=t,o=n[e];return o||l(`Unknown function '${e}'`),o(...r)}(t,c[0]):e(t)?l(`Function notation ["object", {...}] expected but got ${JSON.stringify(t)}`):()=>t;return n=>{try{return r(n)}catch(e){throw e.jsonquery=[{data:n,query:t},...e.jsonquery??[]],e}}}finally{c.shift()}}function l(t){throw new Error(t)}const a={and:"and",or:"or",eq:"==",gt:">",gte:">=",lt:"<",lte:"<=",ne:"!=",add:"+",subtract:"-",multiply:"*",divide:"/",pow:"^",mod:"%",in:"in","not in":"not in"},f=/^[a-zA-Z_$][a-zA-Z\d_$]*$/,p=/^[a-zA-Z_$][a-zA-Z\d_$]*/,g=/^"(?:[^"\\]|\\.)*"/,h=/^-?(?:0|[1-9]\d*)(?:\.\d+)?(?:[eE][+-]?\d+)?/,d=/^(0|[1-9][0-9]*)/,y=/^(true|false|null)/,m=/^[ \n\t\r]+/;function $(t,n){const e={...a},r=Object.keys(e).sort(((t,n)=>n.length-t.length)),o=()=>{w();const n=u();if(w(),"|"===t[q]){const e=[n];for(;"|"===t[q];)q++,w(),e.push(u());return["pipe",...e]}return n},u=()=>{const n=c();w();for(const o of r){const r=e[o];if(t.substring(q,q+r.length)===r)return q+=r.length,w(),[o,n,c()]}return n},c=()=>{if("("===t[q]){q++;const t=o();return N(")"),t}return i()},i=()=>{if("."===t[q]){const n=[];for(;"."===t[q];)q++,n.push(b()??j()??x()??S("Property expected"));return["get",...n]}return l()},l=()=>{const n=q,e=j();if(w(),!e||"("!==t[q])return q=n,f();q++,!s[e]&&S(`Unknown function '${e}'`),w();const r=")"!==t[q]?[o()]:[];for(;q<t.length&&")"!==t[q];)w(),N(","),r.push(o());return N(")"),[e,...r]},f=()=>{if("{"===t[q]){q++,w();const n={};let e=!0;for(;q<t.length&&"}"!==t[q];){e?e=!1:(N(","),w());const t=b()??j()??x()??S("Key expected");w(),N(":"),n[t]=o()}return N("}"),["object",n]}return $()},$=()=>{if("["===t[q]){q++,w();const n=[];let e=!0;for(;q<t.length&&"]"!==t[q];)e?e=!1:(N(","),w()),n.push(o());return N("]"),["array",...n]}return b()??O()??k()},b=()=>v(g,JSON.parse),j=()=>v(p,(t=>t)),O=()=>v(h,JSON.parse),x=()=>v(d,JSON.parse),k=()=>{const t=v(y,JSON.parse);if(void 0!==t)return t;S("Value expected")},v=(n,e)=>{const r=t.substring(q).match(n);if(r)return q+=r[0].length,e(r[0])},w=()=>v(m,(t=>t)),N=n=>{t[q]!==n&&S(`Character '${n}' expected`),q++},S=(t,n=q)=>{throw new SyntaxError(`${t} (pos: ${n})`)};let q=0;const J=o();return w(),q<t.length&&S(`Unexpected part '${t.substring(q)}'`),J}t("G",((t,e)=>{const r="  ",o=(t,e)=>n(t)?s(t,e):JSON.stringify(t),s=(t,n)=>{const[e,...s]=t;if("get"===e&&s.length>0)return c(s);if("pipe"===e){const t=s.map((t=>o(t,n+r)));return l(t,[""," | ",""],["",`\n${n+r}| `,""])}if("object"===e)return u(s[0],n);if("array"===e){const t=s.map((t=>o(t,n)));return l(t,["[",", ","]"],[`[\n${n+r}`,`,\n${n+r}`,`\n${n}]`])}const i=a[e];if(i&&2===s.length){const[t,e]=s;return`(${o(t,n)} ${i} ${o(e,n)})`}const f=1===s.length?n:n+r,p=s.map((t=>o(t,f)));return 1===s.length&&"("===p[0][0]?`${e}${p[0]}`:l(p,[`${e}(`,", ",")"],1===s.length?[`${e}(`,`,\n${n}`,")"]:[`${e}(\n${f}`,`,\n${f}`,`\n${n})`])},u=(t,n)=>{const e=n+r,s=Object.entries(t).map((([t,n])=>`${i(t)}: ${o(n,e)}`));return l(s,["{ ",", "," }"],[`{\n${e}`,`,\n${e}`,`\n${n}}`])},c=t=>t.map((t=>`.${i(t)}`)).join(""),i=t=>f.test(t)?t:JSON.stringify(t),l=(t,[n,e,r],[o,s,u])=>n.length+t.reduce(((t,n)=>t+n.length+e.length),0)-e.length+r.length<=40?n+t.join(e)+r:o+t.join(s)+u;return o(t,"")}))}}}));
